// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  fullName  String
  email     String    @unique
  password  String
  phone     String
  dni       String
  birthDate DateTime
  role      String    @default("cliente") // Añadimos el campo de rol
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Pedido[]
  branchId  Int?
  branch    Branch?   @relation(fields: [branchId], references: [id])
  addresses Address[]
}

model Branch {
  id         Int         @id @default(autoincrement())
  name       String
  address    String
  phone      String
  products   Product[]
  promotions Promotion[]
  user       User[]
}

model Product {
  id                Int         @id @default(autoincrement())
  name              String
  description       String?
  price             Float
  promotional_price Float?
  familia           String?
  stock             Int
  status            String
  created_at        DateTime    @default(now())
  created_by        String
  branchId          Int
  branch            Branch      @relation(fields: [branchId], references: [id])
  imagenUrl         String? // Campo para almacenar la URL de la imagen
  orders            OrderItem[]
  estadoProduct     Boolean?
}

model Promotion {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  discount_price Float
  branchId       Int
  branch         Branch @relation(fields: [branchId], references: [id])
}

model Pedido {
  id          Int         @id @default(autoincrement())
  userId      Int
  totalAmount Float
  status      String
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  User        User        @relation(fields: [userId], references: [id])

  // Nuevos campos para comprobante de pago
  paymentType   String?    @default("Boleta") // "Boleta" o "Factura"
  ruc           String?   // RUC para factura, opcional
  companyName   String?   // Nombre de la empresa, opcional
  companyAddress String?  // Dirección de la empresa, opcional
}

model OrderItem {
  id                Int      @id @default(autoincrement())
  orderId           Int
  productId         Int? // Puedes mantener esto para saber qué producto original estaba relacionado, pero no es obligatorio
  productName       String // Nombre del producto en el momento del pedido
  price             Float // Precio actual del producto en el momento del pedido
  promotional_price Float? // Precio promocional del producto (si aplica)
  familia           String // Familia del producto en el momento del pedido
  quantity          Int
  totalPrice        Float // Precio total por este producto (cantidad * precio/promocional_price)
  order             Pedido   @relation(fields: [orderId], references: [id])
  observation       String?
  Product           Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  imagenUrl         String?
  description       String?
}

model Address {
  id         Int      @id @default(autoincrement())
  address    String // Dirección del usuario
  referencia String? // Campo opcional para la referencia
  createdAt  DateTime @default(now())
  userId     Int // Relación con el usuario
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Eliminación en cascada
  isActive   Boolean  @default(false)
}

//npx prisma migrate dev --name init  //este codigo migra es esquema que se detalla arriba a la db
//cada ves que se agrege datos se debe ejecutar     npx prisma generate
//npx prisma migrate dev --name add_branch_to_user_relation

//si quieres migrar las nuevas columnas agregadas a una tabla  npx prisma migrate dev

//npx prisma generate
//npx prisma migrate deploy

//Migracion de nuevas columnas , estas deben ser de tipo opcionl ?
//npx prisma migrate dev --name add-familia-to-product
//npx prisma generate
