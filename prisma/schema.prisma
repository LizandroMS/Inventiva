// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String
  address   String
  phone     String
  dni       String
  birthDate DateTime
  role      String   @default("cliente") // Añadimos el campo de rol
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Pedido[]
}

model Branch {
  id         Int         @id @default(autoincrement())
  name       String
  address    String
  phone      String
  products   Product[]
  promotions Promotion[]
}

model Product {
  id                Int      @id @default(autoincrement())
  name              String
  description       String?
  price             Float
  promotional_price Float?
  stock             Int
  status            String
  created_at        DateTime @default(now())
  created_by        String
  branchId          Int
  branch            Branch   @relation(fields: [branchId], references: [id])
  imagenUrl         String? // Campo para almacenar la URL de la imagen
   orders    OrderItem[] 
}

model Promotion {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  discount_price Float
  branchId       Int
  branch         Branch @relation(fields: [branchId], references: [id])
}

model Pedido {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  totalAmount Float
  status      String       // Estado del pedido
  items       OrderItem[]  // Relación con los items del pedido
}
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Pedido   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}

//cada ves que se agrege datos se debe ejecutar     npx prisma generate

//npx prisma migrate dev --name init  //este codigo migra es esquema que se detalla arriba a la db

//si quieres migrar las nuevas columnas agregadas a una tabla  npx prisma migrate dev
