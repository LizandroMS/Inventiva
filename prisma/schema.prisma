// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int         @id @default(autoincrement())
  fullName  String
  email     String      @unique
  password  String
  phone     String
  dni       String
  birthDate DateTime
  role      String      @default("cliente")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orders    Pedido[]
  branchId  Int?
  branch    Branch?     @relation(fields: [branchId], references: [id])
  addresses Address[]
  claimBook ClaimBook[]
}

model Branch {
  id         Int         @id @default(autoincrement())
  name       String
  address    String
  phone      String
  products   Product[]
  promotions Promotion[]
  user       User[]
}

model Product {
  id                Int         @id @default(autoincrement())
  name              String
  description       String?
  price             Float
  promotional_price Float?
  familia           String?
  stock             Int
  status            String
  created_at        DateTime    @default(now())
  created_by        String
  branchId          Int
  branch            Branch      @relation(fields: [branchId], references: [id])
  imagenUrl         String?
  orders            OrderItem[]
  estadoProduct     Boolean?
}

model Promotion {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  discount_price Float
  branchId       Int
  branch         Branch @relation(fields: [branchId], references: [id])
}

model Pedido {
  id          Int         @id @default(autoincrement())
  userId      Int
  totalAmount Float
  status      String
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  User        User        @relation(fields: [userId], references: [id])

  paymentType    String? @default("Boleta")
  ruc            String?
  companyName    String?
  companyAddress String?
}

model OrderItem {
  id                Int      @id @default(autoincrement())
  orderId           Int
  productId         Int?
  productName       String
  price             Float
  promotional_price Float?
  familia           String
  quantity          Int
  totalPrice        Float
  order             Pedido   @relation(fields: [orderId], references: [id])
  observation       String?
  Product           Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  imagenUrl         String?
  description       String?
}

model Address {
  id         Int      @id @default(autoincrement())
  address    String
  referencia String?
  createdAt  DateTime @default(now())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  isActive   Boolean  @default(false)
}

model ClaimBook {
  id          Int      @id @default(autoincrement())
  userId      Int?
  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  reason      String // Motivo del reclamo
  description String // Detalles del reclamo
  response    String? // Respuesta al reclamo
  status      String   @default("Pendiente") // Estado del reclamo (Pendiente, Resuelto, Rechazado)
  createdAt   DateTime @default(now()) // Fecha del reclamo
  updatedAt   DateTime @updatedAt // Última fecha de actualización
}

//npx prisma migrate dev --name init  //este codigo migra es esquema que se detalla arriba a la db

//npx prisma generate
